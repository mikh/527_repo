---+EC330 - Spring 2015 - Homework 7
%TOC%

---++_Assigned:_  Thursday, April 9
---++_Due:_  Tuesday, April 21 _at the beginning of class._

<!--
PHI1=6..15
PHI2=1..5
   * Set PHI = %CALCULATE{$HEX2DEC($LEFTSTRING($HEXENCODE(%WIKINAME%),7))}%
   * Set PHI1 = %CALCULATE{$EVAL(6+$MOD(%PHI%,10))}%
   * Set PHI2 = %CALCULATE{$EVAL(1+$MOD(%PHI%,5))}%
-->
---+ Total Grade *[/100]*
---+ Problem 1. Binary Search Trees *[10 points]*
|  Approach   |  Running time  |
|  b  |    |
|  c  |  O( [log(V)] ^ 2) + O(log(V))  |
|  d  |    |
---++ Explanation
<VERBATIM>
For each iteration, we are inserting (takes O(log(n)) time) and, starting after the each number is added once, adding to a list (takes O(1)) time. This is completed log(n) times: so we have, O(log(n)) * [O(log(n)) + O(1)] = O( [log(n)] ^ 2) + O(log(n)).
</VERBATIM>

---++!! Grader comments *[/10]*
<VERBATIM>
Reserved for the grader
</VERBATIM>

---+ Problem 2.  Distance Graphs *[20 points]*
---++!! 2a 
|  Location   |  Driving time(Hr)  |
|  Chichen Itza, Yuc., Mexico  |   57  |
|  CN Tower, 301 Front Street West, Toronto, ON M5V 2T6, Canada  |  9  |
|  Pyramid of the Sun, San Juan Teotihuacán, 55800 Teotihuacán de Arista, State of Mexico, Mexico  |  43  |
|  Statue of Liberty National Monument, Liberty Island, New York, NY  |   4  |
|  Mandalay Bay, 3950 South Las Vegas Boulevard, Las Vegas, NV 89119  |  40  |

Does this graph exhibit the triangle inequality? Yes
---++!! 2b

| Edges in the MST via Kruskal's Algorithm | Weight |
| (Photonics Center, Statue of Liberty)  | 4 |
| (Statue of Liberty, CN Tower) | 9 |
| (Chichen Itza, Pyramid of the Sun) | 16 |
| (Mandalay Bay, Pyramid of the Sun)  | 29 |
| (Mandalay Bay, CN Tower)  | 33 |

---++!! 2c
|  Index  |  Location   |  &pi;  |
|  a  |  Photonics Center,8 St Marys St, Boston, MA 02215  | N/A (source)|
|  b  |  Chichen Itza, Yuc., Mexico  |(d,b)|
|  c  |  CN Tower, 301 Front Street West, Toronto, ON M5V 2T6, Canada  |(e,c)|
|  d  |  Pyramid of the Sun, San Juan Teotihuacán, 55800 Teotihuacán de Arista, State of Mexico, Mexico  |(f,d) |
|  e  |  Statue of Liberty National Monument, Liberty Island, New York, NY  | (a,e) |
|  f  |  Mandalay Bay, 3950 South Las Vegas Boulevard, Las Vegas, NV 89119  | (c,f)  |

---++!! 2d
---+++!! Algorithm
<VERBATIM>
Describe your algorithm here. Pseudocode is preferred.
</VERBATIM>
---+++!! Analysis
<VERBATIM>
Descrbie and analyze your algorithm.
</VERBATIM>

---++!! Grader comments *[/20]*
<VERBATIM>
Reserved for the grader
</VERBATIM>

---+ Problem 3.  Minimum Spanning Trees *[10 points]*
---++!! a
<VERBATIM>
This algorithm always produces a minimum spanning tree, as it deletes the edges with the highest weight as long as doing so will not create a disconnected graph. This running time is O(E*log(V)).
</VERBATIM>
---++!! b
<VERBATIM>             
                                          

        /|\
   3   / | \  2
      /  |  \
      ---|-5-
      \  |  /
   1   \ | /  1 
        \|/  

Here, the algorithm can give us a minimum spanning tree whose total weight is 1+5+2 = 8 if it chooses randomly to iterate through the vertex with weight 5. However, the actual minimum spanning tree has total weight 1+1+2 = 4.
</VERBATIM>
---++!! c
<VERBATIM>
This algorithm produces a minimum spanning tree. Its running time is O(E*[log(V)]^2).
</VERBATIM>

---++!! Grader comments *[16/20]*
<VERBATIM>
First running time is O(E^2); last is O(E(V+E)).
</VERBATIM>

---+ Problem 4.  DNA sequencing *[20 points]*

---++ 4a.  Simple case [10 points]
---+++!! i
<VERBATIM>
Describe and analyze the algorithm.
</VERBATIM>

---+++!! ii
<VERBATIM>
Provide your result here.
</VERBATIM>

and

%CODE{"cpp"}%
// paste your code here

%ENDCODE%

---++ 4b.  Complications [5 points]
<VERBATIM>
Describe and analyze the modification
</VERBATIM>

---++ 4c.  More complications [5 points]
---+++!! i
<VERBATIM>
Descrbie and analyze the modification.
</VERBATIM>
---+++!! ii
<VERBATIM>
Descrbie and analyze the modification.
</VERBATIM>

---+ Problem 5.  Traveling salesperson *[20 points]*
Provide a _short_ explanation of your approach here and the resulting cycle weight you found.

Also attach your code as =problem5.zip=, containing at least these files
   * =Makefile= :  running "make all" should compile your code to an executable =test=, which, when run, should produce your solution.
   * =result.txt= : the result file with one vertex name per line denoting the vertices of your cycle
