---+EC330 - Spring 2015 - Homework 7
%TOC%

---++_Assigned:_  Thursday, April 9
---++_Due:_  Tuesday, April 21 _at the beginning of class._

<!--
PHI1=6..15
PHI2=1..5
   * Set PHI = %CALCULATE{$HEX2DEC($LEFTSTRING($HEXENCODE(%WIKINAME%),7))}%
   * Set PHI1 = %CALCULATE{$EVAL(6+$MOD(%PHI%,10))}%
   * Set PHI2 = %CALCULATE{$EVAL(1+$MOD(%PHI%,5))}%
-->
---+ Total Grade *[/100]*
---+ Problem 1. Binary Search Trees *[10 points]*
|  Approach   |  Running time  |
|  b  |  Big Theta(n^2 * logn(log(logn)))  |
|  c  |  Big Theta(n^2 * logn)  |
|  d  |  Big Theta(n^2 * log^2(n))  |
---++ Explanation
<VERBATIM>
b. I linearly iterated and expanded the right subtree.
    logn * summation from i=1 to n of (i*lg(logn)) = logn(lg(logn))(.5n(n+1)) is Big Theta(n^2 * logn(log(logn))).

c. logn * summation from i=1 to n of i = (logn)(.5n(n+1)) is Big Theta(n^2 * logn).

d. The worst case here is expanding the right subtree forever.
    Big Theta(n^2 * logn * logn) = Big Theta(n^2 * log^2(n)).
</VERBATIM>

---++!! Grader comments *[/10]*
<VERBATIM>
Reserved for the grader
</VERBATIM>

---+ Problem 2.  Distance Graphs *[20 points]*
---++!! 2a 
|  Location   |  Driving time(Hr)  |
|  Chichen Itza, Yuc., Mexico  |  56  |
|  CN Tower, 301 Front Street West, Toronto, ON M5V 2T6, Canada  |  8  |
|  Pyramid of the Sun, San Juan Teotihuacán, 55800 Teotihuacán de Arista, State of Mexico, Mexico  |  42  |
|  Statue of Liberty National Monument, Liberty Island, New York, NY  |  3  |
|  Mandalay Bay, 3950 South Las Vegas Boulevard, Las Vegas, NV 89119  |  38  |

Does this graph exhibit the triangle inequality?
Since we are dealing with physical distances in real life, the edges will form a triangle which must exhibit the triangle inequality.
---++!! 2b
|  Index  |  Location   |  &pi;  |
|  a  |  Photonics Center,8 St Marys St, Boston, MA 02215  |  -  |
|  b  |  Chichen Itza, Yuc., Mexico  |  d  |
|  c  |  CN Tower, 301 Front Street West, Toronto, ON M5V 2T6, Canada  |  e  |
|  d  |  Pyramid of the Sun, San Juan Teotihuacán, 55800 Teotihuacán de Arista, State of Mexico, Mexico  |  f  |
|  e  |  Statue of Liberty National Monument, Liberty Island, New York, NY  |  a  |
|  f  |  Mandalay Bay, 3950 South Las Vegas Boulevard, Las Vegas, NV 89119  |  c  |

Undirected graph with vertex a connected to e, e connected to c, c connected to f, f connected to d, and d connected to b.
---++!! 2c
|  Index  |  Location   |  &pi;  |
|  a  |  Photonics Center,8 St Marys St, Boston, MA 02215  |  -  |
|  b  |  Chichen Itza, Yuc., Mexico  |  d  |
|  c  |  CN Tower, 301 Front Street West, Toronto, ON M5V 2T6, Canada  |  e  |
|  d  |  Pyramid of the Sun, San Juan Teotihuacán, 55800 Teotihuacán de Arista, State of Mexico, Mexico  |  f  |
|  e  |  Statue of Liberty National Monument, Liberty Island, New York, NY  |  a  |
|  f  |  Mandalay Bay, 3950 South Las Vegas Boulevard, Las Vegas, NV 89119  |  c  |

---++!! 2d
---+++!! Algorithm
<VERBATIM>
Radix sort edges
for i in vertices
    make_set(i)
for j in edges
    if find_set(u) != find_set(v)
        A.push_back(j)
        Union(u,v)
return A
</VERBATIM>
---+++!! Analysis
<VERBATIM>
Running time:
Radix sort edges: Big Theta(E)
make_set: Big Theta(V)
for j in edges: Big Theta(E)
find_set: Big Theta(1)
Union: Big Theta(1)
Total Running Time: Big Theta(V + 2E)

Since E > V in a complete graph, the overall running time is Big Theta(E).
</VERBATIM>

---++!! Grader comments *[/20]*
<VERBATIM>
Reserved for the grader
</VERBATIM>

---+ Problem 3.  Minimum Spanning Trees *[10 points]*
---++!! a
<VERBATIM>
line 1: Big Theta(ElogE)
line 3: Big Theta(E)

Running time = Big Theta(ElogE + E) = Big Theta(ElogE)
</VERBATIM>
---++!! b
<VERBATIM>
For example, we have an edge list E = {(0,3), (3,1), (1,4), (4,2), (2,5), (0,1), (1,2), (2,3), (3,4), (4,5)}
The weights are as follows: (0,3) = 2, (3,1) = 1, (1,4) = 5, (4,2) = 8, (2,5) = 7, (0,1) = 1, (1,2) = 2, (2,3) = 2, (3,4) = 2, (4,5) = 1.
The function arbitrarily picks edges (0,3), (3,1), (1,4), (4,2), (2,5) which do not make a MST.
</VERBATIM>
---++!! c
<VERBATIM>
line 2: Big Theta(E)
line 3: Big Theta(E)
line 4: Big Theta(V)

Running time = Big Theta(VE + E^2) = Big Theta(E^2)
</VERBATIM>

---++!! Grader comments *[18/20]*
<VERBATIM>
First running time is O(E^2).
</VERBATIM>

---+ Problem 4.  DNA sequencing *[20 points]*

---++ 4a.  Simple case [10 points]
---+++!! i
<VERBATIM>
Use an array of linked lists

current_vertex = 0
sort array
for(current_vertex.adjancies)
    if((u,v) does not make a cycle)
        result.push_back(u,v)
        current_vertex = v

Runtime: Sorting the array takes Big Theta(V^2) and iterating through the graph to see if it makes a cycle takes Big Theta(V^2) for an overall runtime of Big Theta(V^2).
</VERBATIM>

---+++!! ii
<VERBATIM>
Provide your result here.
</VERBATIM>

and

%CODE{"cpp"}%
// paste your code here

%ENDCODE%

---++ 4b.  Complications [5 points]
<VERBATIM>
Describe and analyze the modification
</VERBATIM>

---++ 4c.  More complications [5 points]
---+++!! i
<VERBATIM>
Descrbie and analyze the modification.
</VERBATIM>
---+++!! ii
<VERBATIM>
Descrbie and analyze the modification.
</VERBATIM>


---+++!! Grader comments
<VERBATIM>Question 4 Results:

Total Grade: 1

	1         		no code , no result
	0         		
	0         		


</VERBATIM>

---+ Problem 5.  Traveling salesperson *[20 points]*
Provide a _short_ explanation of your approach here and the resulting cycle weight you found.

Also attach your code as =problem5.zip=, containing at least these files
   * =Makefile= :  running "make all" should compile your code to an executable =test=, which, when run, should produce your solution.
   * =result.txt= : the result file with one vertex name per line denoting the vertices of your cycle


---+++!! Grader comments
<VERBATIM>Question 5 Results:

Total Grade: 0

	0         		Grades from submission
	0         		


</VERBATIM>

