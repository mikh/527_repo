---+EC330 - Spring 2015 - Homework 7
%TOC%

---++_Assigned:_  Thursday, April 9
---++_Due:_  Tuesday, April 21 _at the beginning of class._

<!--
PHI1=6..15
PHI2=1..5
   * Set PHI = %CALCULATE{$HEX2DEC($LEFTSTRING($HEXENCODE(%WIKINAME%),7))}%
   * Set PHI1 = %CALCULATE{$EVAL(6+$MOD(%PHI%,10))}%
   * Set PHI2 = %CALCULATE{$EVAL(1+$MOD(%PHI%,5))}%
-->
---+ Total Grade *[/100]*
---+ Problem 1. Binary Search Trees *[10 points]*
|  Approach   |  Running time  |
|  b  |  nLog(n)^2  |
|  c  |  nLog(n)  |
|  d  |   n^2 |
---++ Explanation
<VERBATIM>
Provide explanation for partial credits
</VERBATIM>

---++!! Grader comments *[/10]*
<VERBATIM>
Reserved for the grader
</VERBATIM>

---+ Problem 2.  Distance Graphs *[20 points]*
---++!! 2a 
|  Location   |  Driving time(Hr)  |
|  Chichen Itza, Yuc., Mexico  |  57  |
|  CN Tower, 301 Front Street West, Toronto, ON M5V 2T6, Canada  |  8  |
|  Pyramid of the Sun, San Juan Teotihuacán, 55800 Teotihuacán de Arista, State of Mexico, Mexico  | 41  |
|  Statue of Liberty National Monument, Liberty Island, New York, NY  |  3  |
|  Mandalay Bay, 3950 South Las Vegas Boulevard, Las Vegas, NV 89119  |  37  |

Does this graph exhibit the triangle inequality? 
yes, there is no shorter path than a direct path between two points
---++!! 2b
|  Index  |  Location   |  &pi;  |
|  a  |  Photonics Center,8 St Marys St, Boston, MA 02215  |  e |
|  b  |  Chichen Itza, Yuc., Mexico  |  d  |
|  c  |  CN Tower, 301 Front Street West, Toronto, ON M5V 2T6, Canada  | e   |
|  d  |  Pyramid of the Sun, San Juan Teotihuacán, 55800 Teotihuacán de Arista, State of Mexico, Mexico  | e,f,b   |
|  e  |  Statue of Liberty National Monument, Liberty Island, New York, NY  |  a,c,d  |
|  f  |  Mandalay Bay, 3950 South Las Vegas Boulevard, Las Vegas, NV 89119  |  d  |

---++!! 2c
|  Index  |  Location   |  &pi;  |
|  a  |  Photonics Center,8 St Marys St, Boston, MA 02215  |  start  |
|  b  |  Chichen Itza, Yuc., Mexico  |  d,f,c,e,a |
|  c  |  CN Tower, 301 Front Street West, Toronto, ON M5V 2T6, Canada  |  e,a  |
|  d  |  Pyramid of the Sun, San Juan Teotihuacán, 55800 Teotihuacán de Arista, State of Mexico, Mexico  | f,c,e,a   |
|  e  |  Statue of Liberty National Monument, Liberty Island, New York, NY  |  a  |
|  f  |  Mandalay Bay, 3950 South Las Vegas Boulevard, Las Vegas, NV 89119  |  c,e,a  |

---++!! 2d
---+++!! Algorithm
<VERBATIM>
Because we know the range of values, we can use a counting sort instead of a general sorting algorithm to bring the sorting portion of Kruskal's algorithm down to linear time rather than ElogE. Sorting is the longest portion of a traditional Kruskal's algorithm, so the next longest running portion will become the limiting factor.
</VERBATIM>
---+++!! Analysis
<VERBATIM>
**assuming we can use a blackbox disjoint set data structure**
- Counting sort by weight of edges in disjoint set [O(E)]
- merge vertices connected by smallest weight edges that do not form a cycle. [O(E)]

therefore run time will be O(E)
</VERBATIM>
---++!! Grader comments *[/20]*
<VERBATIM>
Reserved for the grader
</VERBATIM>

---+ Problem 3.  Minimum Spanning Trees *[10 points]*
---++!! a
<VERBATIM>
Yes, it will work

This is essentially doing Kruskal's algorithm in reverse. Instead of adding smallest weight edges you are taking away largest weight edges. This will work well in sparse, but still connected graphs and will run in the same time given it's going the same computations O(ElogV)
</VERBATIM>
---++!! b
<VERBATIM>
Will not work

If edges are taken in arbitrary order it is perfectly possible that the algorithm will miss smallest edges therefore not creating a MST.
</VERBATIM>
---++!! c
<VERBATIM>
This will work as it is essentially adding edges, then taking out the largest unnecessary edges, although will not do it quickly.

The first line needs to be repeated E times
second line we assume is constantly time
third line must check to see if there is a newly created cycle, which will take E time
if there is a cycle, it must remove the largest edge, which will take constant time

So the final running time should be O(E^2)
</VERBATIM>
---++!! Grader comments *[18/20]*
<VERBATIM>
First running time is O(E^2).
</VERBATIM>

---+ Problem 4.  DNA sequencing *[20 points]*

---++ 4a.  Simple case [10 points]
---+++!! i
<VERBATIM>
Describe and analyze the algorithm.
</VERBATIM>

---+++!! ii
<VERBATIM>
Provide your result here.
</VERBATIM>

and

%CODE{"cpp"}%
// paste your code here

%ENDCODE%

---++ 4b.  Complications [5 points]
<VERBATIM>
Describe and analyze the modification
</VERBATIM>

---++ 4c.  More complications [5 points]
---+++!! i
<VERBATIM>
Descrbie and analyze the modification.
</VERBATIM>
---+++!! ii
<VERBATIM>
Descrbie and analyze the modification.
</VERBATIM>


---+++!! Grader comments
<VERBATIM>Question 4 Results:

Total Grade: 0

	0         		
	0         		
	0         		


</VERBATIM>

---+ Problem 5.  Traveling salesperson *[20 points]*
Provide a _short_ explanation of your approach here and the resulting cycle weight you found.

Also attach your code as =problem5.zip=, containing at least these files
   * =Makefile= :  running "make all" should compile your code to an executable =test=, which, when run, should produce your solution.
   * =result.txt= : the result file with one vertex name per line denoting the vertices of your cycle


---+++!! Grader comments
<VERBATIM>Question 5 Results:

Total Grade: 0

	0         		Grades from submission
	0         		


</VERBATIM>

