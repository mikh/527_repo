---+EC330 - Spring 2015 - Homework 6
%TOC%

---++_Assigned:_  Thursday, March 26
---++_Due:_  Thursday, April 2 _at the beginning of class._

<!--
PHI1=6..15
PHI2=3..5
   * Set PHI = %CALCULATE{$HEX2DEC($LEFTSTRING($HEXENCODE(ZacherySarkis),7))}%
   * Set PHI1 = %CALCULATE{$EVAL(6+$MOD(%PHI%,10))}%
   * Set PHI2 = %CALCULATE{$EVAL(3+$MOD(%PHI%,3))}%
-->

---+ Problem 1. Representations. *[30 points]*
---++ a
---+++!! Running time
<VERBATIM>
Provide your answer here.
</VERBATIM>
O(E)
---+++!! Brief explanation
<VERBATIM>
Provide your answer here.
</VERBATIM>
each edge needs to be counted once
---++ b
---+++!! Running time
<VERBATIM>
Provide your answer here.
</VERBATIM>
<latex>O(V^{2})</latex>
---+++!! Brief explanation
<VERBATIM>
Provide your answer here.
</VERBATIM>
assuming the graph has all nodes connected it would have to iterate through each vertex for each vertex resulting in V squared time
---++ c
---+++!! Running time
<VERBATIM>
Provide your answer here.
</VERBATIM>
<latex>\theta(V^{2})</latex>
---+++!! Brief explanation
<VERBATIM>
Provide your answer here.
</VERBATIM>
it has to iterate through each vertex for each vertex
---++!! Grader comments *[/30]*
<VERBATIM>
Reserved for the grader
</VERBATIM>

---+ Problem 2.  Graph algorithms *[20 points]*
---++ a
<VERBATIM>
Provide your pseudocode here.
</VERBATIM>

start at any node and color it white

put s in queue

while queue not empty

x = pop(queue)

for every neighbor n of x{

	  if n isn’t colored{

		  color it the opposite color of x and put it in the queue.

	  } if n is colored and is the same color as x {

		  halt and output NOT BIPARTITE


}} output G IS BIPARTITE

---++ b
<VERBATIM>
Provide your pseudocode here.
</VERBATIM>

adjusted DFS:

color all vertices white

for each white vertex v {

	DFS-Visit(v)

}
——
DFS-Visit(v) {

	color v grey {

	if edge unexplored {

		for each node n adjacent to v {

			if n is white {

				DFS-Visit(n)

			} else {

				halt and output CYCLE FOUND

	} } } }color v black
---++!! Grader comments *[/20]*
<VERBATIM>
Reserved for the grader
</VERBATIM>

---+ Problem 3.  Graph implementation *[20 points]*
---++ 3a.
Attach your solutions to this topic.
---++ 3b.
Attach your solutions to this topic.

---++!! Grader comments *[/20]*
<VERBATIM>
Reserved for the grader
</VERBATIM>

---+ Problem 4.  Simplified Chess *[30 points]*
---++ 4a
---+++ i.
<VERBATIM>
Provide your answer here.
</VERBATIM>
---+++ ii.  
<VERBATIM>
Provide your answer here.
</VERBATIM>

---++ 4b.  Main task [20 points]
Provide a description of your approach here.  Upload your code online.

---++!! Grader comments *[/30]*
<VERBATIM>
Reserved for the grader
</VERBATIM>
---
